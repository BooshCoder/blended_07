{"version":3,"file":"index.js","sources":["../src/js/products-api.js","../src/js/refs.js","../src/js/render-function.js","../src/home.js"],"sourcesContent":["// –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –±–µ–∫–µ–Ω–¥–æ–º\nimport axios from \"axios\";\n\naxios.defaults.baseURL = 'https://dummyjson.com';\n\nexport async function fetchCategories() {\n    const response = await axios.get('/products/category-list');\n    console.log(response.data);\n    return response.data;\n}\nexport async function fetchProducts() {\n    const currentPage = 1;\n    const url = `https://dummyjson.com/products?limit=12&skip=${(currentPage - 1) * 12}`;\n    const response = await axios.get(url);\n    console.log(response.data.products);\n    return response.data.products;\n   \n}\n\nexport async function fetchProductsByCategory(category) {\n    const response = await axios.get(`/products/category/${category}`);\n    console.log(response.data.products);\n    return response.data.products;\n  }","export const refs = {\n    allCategories: document.querySelector('.categories'),\n    allProducts: document.querySelector('.products'),\n    notFound: document.querySelector('.not-found'),\n};\n\n\n\n","import { refs } from \"./refs\";\nexport function markupCategories(categories) {\n    refs.allCategories.innerHTML = '';\n    const markup = categories.map(category =>\n      `<li class=\"categories__item\">\n        <button class=\"categories__btn\" type=\"button\">${category}</button>\n      </li>`\n    ).join('');\n    refs.allCategories.innerHTML = markup; \n}  \nexport function markupProducts(products) {\n    refs.allProducts.innerHTML = '';\n    const markup = products.map(product =>\n      `<li class=\"products__item\" data-id=\"${product.id}\">\n        <img class=\"products__image\" src=\"${product.thumbnail}\" alt=\"${product.title}\"/>\n        <p class=\"products__title\">${product.title}</p>\n        <p class=\"products__brand\"><span class=\"products__brand--bold\">Brand:</span> ${product.brand}</p>\n        <p class=\"products__category\">Category: ${product.category}</p>\n        <p class=\"products__price\">Price: $${product.price}</p>\n      </li>`\n    ).join('');\n    refs.allProducts.innerHTML = markup; \n}","import { fetchCategories } from \"./js/products-api\"\nimport { markupCategories } from \"./js/render-function\"\nimport { fetchProducts } from \"./js/products-api\";\nimport { markupProducts } from \"./js/render-function\";\nimport { fetchProductsByCategory } from \"./js/products-api\";\nimport { refs } from \"./js/refs\"\n\n\n\nasync function renderCategories() {\n    const categories = await fetchCategories();\n    const allCategories = [\"All\", ...categories];\n    markupCategories(allCategories);\n}\n\nrenderCategories();\n\n\nasync function renderInitialProducts() {\n    const products = await fetchProducts();\n    markupProducts(products);\n}\n\nrenderInitialProducts();\n\nrefs.allCategories.addEventListener(\"click\", handleCategoryClick);\n\nasync function handleCategoryClick(event) {\n    const btn = event.target.closest(\".categories__btn\");\n    if (!btn) return;\n    const category = btn.textContent.trim();\n  \n    // –ó–Ω—ñ–º–∞—î–º–æ —Å—Ç–∞—Ä—É –∞–∫—Ç–∏–≤–Ω—É –∫–Ω–æ–ø–∫—É\n    const activeBtn = refs.allCategories.querySelector(\".categories__btn--active\");\n    if (activeBtn) activeBtn.classList.remove(\"categories__btn--active\");\n  \n    // –†–æ–±–∏–º–æ –Ω–æ–≤—É –∫–Ω–æ–ø–∫—É –∞–∫—Ç–∏–≤–Ω–æ—é\n    btn.classList.add(\"categories__btn--active\");\n  \n    // –ó–∞–ø–∏—Ç –ø—Ä–æ–¥—É–∫—Ç—ñ–≤\n    let products = [];\n    try {\n      if (category === \"All\") {\n        products = await fetchProducts();\n      } else {\n        products = await fetchProductsByCategory(category);\n      }\n  \n      if (!products.length) {\n        refs.notFound.classList.add(\"not-found--visible\");\n        refs.allProducts.innerHTML = \"\";\n      } else {\n        refs.notFound.classList.remove(\"not-found--visible\");\n        markupProducts(products);\n      }\n    } catch (err) {\n      console.error(\"üòø –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç–∏:\", err);\n    }\n  }"],"names":["axios","fetchCategories","response","fetchProducts","fetchProductsByCategory","category","refs","markupCategories","categories","markup","markupProducts","products","product","renderCategories","allCategories","renderInitialProducts","handleCategoryClick","event","btn","activeBtn","err"],"mappings":"oFAGAA,EAAM,SAAS,QAAU,wBAElB,eAAeC,GAAkB,CACpC,MAAMC,EAAW,MAAMF,EAAM,IAAI,yBAAyB,EAC1D,eAAQ,IAAIE,EAAS,IAAI,EAClBA,EAAS,IACpB,CACO,eAAeC,GAAgB,CAGlC,MAAMD,EAAW,MAAMF,EAAM,IADjB,gDACwB,EACpC,eAAQ,IAAIE,EAAS,KAAK,QAAQ,EAC3BA,EAAS,KAAK,QAEzB,CAEO,eAAeE,EAAwBC,EAAU,CACpD,MAAMH,EAAW,MAAMF,EAAM,IAAI,sBAAsBK,CAAQ,EAAE,EACjE,eAAQ,IAAIH,EAAS,KAAK,QAAQ,EAC3BA,EAAS,KAAK,QACzB,CCvBO,MAAMI,EAAO,CAChB,cAAe,SAAS,cAAc,aAAa,EACnD,YAAa,SAAS,cAAc,WAAW,EAC/C,SAAU,SAAS,cAAc,YAAY,CACjD,ECHO,SAASC,EAAiBC,EAAY,CACzCF,EAAK,cAAc,UAAY,GAC/B,MAAMG,EAASD,EAAW,IAAIH,GAC5B;AAAA,wDACkDA,CAAQ;AAAA,YAEhE,EAAM,KAAK,EAAE,EACTC,EAAK,cAAc,UAAYG,CACnC,CACO,SAASC,EAAeC,EAAU,CACrCL,EAAK,YAAY,UAAY,GAC7B,MAAMG,EAASE,EAAS,IAAIC,GAC1B,uCAAuCA,EAAQ,EAAE;AAAA,4CACXA,EAAQ,SAAS,UAAUA,EAAQ,KAAK;AAAA,qCAC/CA,EAAQ,KAAK;AAAA,uFACqCA,EAAQ,KAAK;AAAA,kDAClDA,EAAQ,QAAQ;AAAA,6CACrBA,EAAQ,KAAK;AAAA,YAE1D,EAAM,KAAK,EAAE,EACTN,EAAK,YAAY,UAAYG,CACjC,CCbA,eAAeI,GAAmB,CAE9B,MAAMC,EAAgB,CAAC,MAAO,GADX,MAAMb,GACkB,EAC3CM,EAAiBO,CAAa,CAClC,CAEAD,IAGA,eAAeE,GAAwB,CACnC,MAAMJ,EAAW,MAAMR,IACvBO,EAAeC,CAAQ,CAC3B,CAEAI,IAEAT,EAAK,cAAc,iBAAiB,QAASU,CAAmB,EAEhE,eAAeA,EAAoBC,EAAO,CACtC,MAAMC,EAAMD,EAAM,OAAO,QAAQ,kBAAkB,EACnD,GAAI,CAACC,EAAK,OACV,MAAMb,EAAWa,EAAI,YAAY,KAAI,EAG/BC,EAAYb,EAAK,cAAc,cAAc,0BAA0B,EACzEa,GAAWA,EAAU,UAAU,OAAO,yBAAyB,EAGnED,EAAI,UAAU,IAAI,yBAAyB,EAG3C,IAAIP,EAAW,CAAA,EACf,GAAI,CACEN,IAAa,MACfM,EAAW,MAAMR,IAEjBQ,EAAW,MAAMP,EAAwBC,CAAQ,EAG9CM,EAAS,QAIZL,EAAK,SAAS,UAAU,OAAO,oBAAoB,EACnDI,EAAeC,CAAQ,IAJvBL,EAAK,SAAS,UAAU,IAAI,oBAAoB,EAChDA,EAAK,YAAY,UAAY,GAKhC,OAAQc,EAAK,CACZ,QAAQ,MAAM,mCAAoCA,CAAG,CACtD,CACL"}